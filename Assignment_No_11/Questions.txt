/*Q1.Given an array of N integers. Find the first element that occurs at least K number of times.
 
Example 1:
Input :
N = 7, K = 2
A[] = {1, 7, 4, 3, 4, 8, 7}
Output :
7
*/

class ArrayQ1
{
	public static void main(String[] arge)
	{
	int a[] ={1, 7, 4, 3, 4, 8, 7};
	
	// first way

	int count =1;
	
	for (int i =0;i<a.length;i++)
	{
		for (int j=i+1;j<a.length;j++)
		{
			if (a[i] == a[j]) 
			{
				System.out.println("Output is :"+a[i]);
				count++;
			
			}
		}
	}

	// 2nd way
	
	for (int i=0;i<a.length;i++)
	{
		int count=1;
		for (int j=i+1;j<a.length;j++)
		{
			if (a[i] == a[j])
			{
				a[j] = -1;
				count++;
			}
		}
		if (a[i] != -1)
		System.out.println("The frequency of elements is "+a[i]+" count is: "+count);
	}

	
	}

}
==========================================================================
==========================================================================
/*
Q2.Given an array A of positive integers. Your task is to find the leaders in the array. An element of array is leader if it is greater than or equal to all the elements to its right side. The rightmost element is always a leader.

Example 1:

Input:
n = 6
A[] = {16,17,4,3,5,2}
Output: 17 5 2
*/

class ArrayQ2
{
	public static void main(String[] arg)
	{
	int a[] = {16,17,4,3,5,2};
	
	
	System.out.print("Output is :");
	for (int i=0;i<a.length;i++)
	{
		int j ;
		for (j=i+1;j<a.length;j++)
		{
			if (a[i] < a[j])
			{
				break;
			}
		}
	
		if (j == a.length)
		{
			System.out.print(a[i]+" ");
		}
	}	
	
	}
}
==========================================================================
==========================================================================

==========================================================================
==========================================================================
/*
Q4.You are given two arrays, A and B, of equal size N. The task is to find the minimum value of A[0] * B[0] + A[1] * B[1] + .... + A[N-1] * B[N-1], where shuffling of elements of arrays A and B is allowed.


Example 1:
Input:
N = 3
A[] = {3, 1, 1}
B[] = {6, 5, 4}
Output:
23
*/

class ArrayQ4
{
	public static void main(String[] arge)	
	{
	int a[] = {3,1,1};
	int b[] = {6,5,4};
	
	System.out.println("Sort accsending  array 1st:");
	for (int i=0;i<a.length;i++)
	{
		for (int j=i+1;j<a.length;j++)
		{
			if (a[i]>a[j])
			{
				int temp = a[i];
				a[i] = a[j];
				a[j] = temp;
			}
		}
	}
	
	for (int i=0;i<a.length;i++)
	{
		System.out.print(a[i]+" ");
	}
	
	System.out.println("\nSort descending  array 2nd:");
	for (int i=0;i<b.length;i++)
	{
		for (int j=i+1;j<b.length;j++)
		{
			if (b[i]<b[j])
			{
				int temp = b[i];
				b[i] = b[j];
				b[j] = temp;
			}
		}
	}
	
	for (int i=0;i<b.length;i++)
	{
		System.out.print(b[i]+" ");
	}
	
		
	int sum = 0;
	for (int i=0;i<a.length;i++)
	{
		sum =sum + a[i]*b[i];
	}
	
	System.out.println("\nOutput is: "+sum);
	}
}
==========================================================================
==========================================================================
/*
Q5.Given two sorted arrays arr1 and arr2 of size N and M respectively and an element K. The task is to find the element that would be at the kâ€™th position of the final sorted array.
 

Example 1:

Input:
arr1[] = {2, 3, 6, 7, 9}
arr2[] = {1, 4, 8, 10}
k = 5
Output:
6
*/

class ArrayQ5
{
	public static void main(String[] arge)
	{
	int a[] = {2, 3, 6, 7, 9};
	int b[] =  {1, 4, 8, 10};
	
	int c[] = new int[a.length+b.length];
	
	for (int i=0;i<a.length;i++)
	{
		c[i] = a[i];
		
		
	}
	
	for (int i=0;i<b.length;i++)
	{
		c[a.length+i] = b[i];
		
	}
	
	for (int i=0;i<c.length;i++)
	{
		for (int j=i+1;j<c.length;j++)
		{
			if (c[i]>c[j])
			{
				int temp = c[i];
				c[i] = c[j];
				c[j] = temp;
			}
		}
	}	
	int k = 5;
		
	System.out.print("Kth position element is :");
	for (int i=0;i<c.length;i++)
	{
		if (i+1 == k)
		{
			System.out.print(c[i]);
			
		}
	}
	}
}
==========================================================================
==========================================================================
/*
Q6.Given an array of size N filled with numbers from 1 to N-1 in random order. The array has only one repetitive element. The task is to find the repetitive element.

Examples:

Input: a[] = {1, 3, 2, 3, 4}
Output: 3
*/

class ArrayQ6
{
	public static void main(String[] arge)
	{
	int a[]  = {1, 3, 2, 3, 4};
	
	int sum = 0;
	for (int i=0;i<a.length;i++)
	{
		sum = sum +a[i];
	}
	
	// formula = (n-1 )* n/2; n = a.length;

	int exsum = (a.length-1)*a.length/2;
	
	int rep = sum - exsum;
	
	System.out.println("repetitive elements is :"+rep);
	
	}
}
==========================================================================
==========================================================================
/*
Q7.Given two unsorted arrays that represent two sets (elements in every array are distinct), find the union and intersection of two arrays.

Example:

arr1[] = {7, 1, 5, 2, 3, 6}
arr2[] = {3, 8, 6, 20, 7}
Then your program should print Union as {1, 2, 3, 5, 6, 7, 8, 20} and Intersection as {3, 6, 7}. Note that the elements of union and intersection can be printed in any order.

*/ 


class ArrayQ7
{
	public static void main(String[] arge)
	{
	int a[] = {7, 1, 5, 2, 3, 6};
	int b[] = {3, 8, 6, 20, 7};
	
	int c[] = new int[a.length+b.length];
	
	for (int i=0;i<a.length;i++)
	{
		c[i]=a[i];	
		
	}
		
	for (int i=0;i<b.length;i++)
	{	
		c[a.length+i]=b[i];
	}
	
	for (int i=0;i<c.length;i++)
	{	
		for (int j=i+1;j<c.length;j++)
		{
			if (c[i]>c[j])
			{
				int temp = c[i];
				c[i] = c[j];
				c[j] = temp;
			}
		}
	}
	
	System.out.print("intresection array is :");
	for (int i=0;i<c.length;i++)
	{	
		for (int j=i+1;j<c.length;j++)
		{
			if (c[i] == c[j])
			{
				System.out.print(c[j]+" ");
			}
		}
	}


	
	for (int i=0;i<c.length;i++)
	{	
		for (int j=i+1;j<c.length;j++)
		{
			if (c[i] == c[j])
			{
				c[j] = -1;
			}
		}
	}

	
	System.out.println("\nUnion array is:");
	for (int i=0;i<c.length;i++)
	{
		if (-1 != c[i])
		System.out.print(c[i]+" ");	
		
	}
	
	}

}
==========================================================================
==========================================================================
/*
Q8.Given three arrays sorted in non-decreasing order, print all common elements in these arrays.

Examples:

Input:
ar1[] = {1, 5, 10, 20, 40, 80}
ar2[] = {6, 7, 20, 80, 100}
ar3[] = {3, 4, 15, 20, 30, 70, 80, 120}
Output: 20, 80
*/
	
class ArrayQ8
{
	public static void main(String[] arge)
	{
	int a[] = {1, 5, 10, 20, 40, 80};
	int b[] = {6, 7, 20, 80, 100};
	int c[] = {3, 4, 15, 20, 30, 70, 80, 120};
	
	System.out.println("common elements in arrays output : ");
	for (int i=0;i<a.length;i++)
	{
		for (int j=0;j<b.length;j++)
		{
			for (int k=0;k<c.length;k++)
			{
				if (a[i] == b[j] && b[j] == c[k])
				{
					System.out.print(a[i]+" ");
				}
			}
		}
	}
	}
}
==========================================================================
==========================================================================
/*
Q9.Given an array of integers. All numbers occur twice except one number which occurs once. Find the number
Example :

Input:  arr[] = {2, 3, 5, 4, 5, 3, 4}
Output: 2
*/


class ArrayQ9
{
	public static void main(String[] arge)
	{
	int a[] = {2, 3, 5, 4, 5, 3, 4};
	
	for (int i=0;i<a.length;i++)
	{	
		int j;
		for (j=i+1;j<a.length;j++)
		{
			if(a[i] == a[j])
			{
				a[j] = -1;
				break;
			}
		}
		if (j == a.length && a[i] != -1)
		{
			System.out.print(a[i]+" ");
		}
	}
	}
}
==========================================================================
==========================================================================
/*
Q10.Given an array arr[] of integers, segregate even and odd numbers in the array. Such that all the even numbers should be present first, and then the odd numbers.

Examples:  

Input: arr[] = 1 9 5 3 2 6 7 11
Output: 2 6  1 9 5 3 7 11
*/

class ArrayQ10
{
	public static void main(String[] arge)
	{
	int a[] = {1 ,9, 5, 3, 2, 6, 7, 11};
	int b[] = new int[a.length];
	int x = 0;

	for (int i=0;i<a.length;i++)
	{
		if (a[i]%2 == 0)
		{
			b[x] = a[i];
			x++;
		}
	}
	
	for (int i=0;i<a.length;i++)
	{
		if (a[i]%2 != 0)
		{
			b[x] = a[i];
			x++;
		}
	}
	
	System.out.print("Output is :");
	for (int i=0;i<b.length;i++)
	{
		System.out.print(b[i]+" ");
	}

	}
}
==========================================================================
==========================================================================
